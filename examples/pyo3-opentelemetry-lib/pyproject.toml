[build-system]
requires = ["maturin>=1.0.0,<2.0.0"]
build-backend = "maturin"

[project]
name = "pyo3_opentelemetry_lib"
requires-python = ">=3.7"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]

[tool.poetry]
name = "pyo3-opentelemetry-lib"
version = "0.1.0"
description = "Propagation of OpenTelemetry context from Python to Rust"
readme = "README.md"
authors = [
	"Rigetti Computing <softapps@rigetti.com>",
	"Eric Hulburd <ehulburd@rigetti.com>",
]

[tool.poetry.dependencies]
python = ">=3.8"
pytest = "^7.3.0"
opentelemetry-api = "^1.17.0"
opentelemetry-sdk = "^1.17.0"
pytest-asyncio = "^0.21.0"
opentelemetry-proto = "^1.20.0"

[tool.poetry.group.dev.dependencies]
maturin = "^1.4.0"
black = "^23.3.0"
pyright = "^1.1.303"
ruff = "^0.0.261"
pytest-asyncio = "^0.21.1"
grpcio = "^1.59.0"
pytest-forked = "^1.6.0"
mypy = "^1.7.1"
pytest-timeout = "^2.2.0"

[tool.maturin]
features = ["pyo3/extension-module"]
bindings = "pyo3"
compatibility = "linux"
sdist-include = ["README.md"]

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
preview= true
extend-exclude = '''
(
    "pyo3_opentelemetry_lib\/__init__.py",
)
'''

[tool.mypy]

[[tool.mypy.overrides]]
module = [
    "grpc",
    "grpc.aio",
] 
ignore_missing_imports = true

[tool.pyright]
exclude = [
    "pyo3_opentelemetry_lib/__init__.py",
    ".venv"
]
reportUnsupportedDunderAll = false

[tool.ruff]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I001"
]
src = ["pyo3_opentelemetry_lib", "tests"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 120

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.pytest.ini_options]
timeout = 900
