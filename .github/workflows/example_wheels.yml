on: 
  push:
    branches: [main]
  pull_request: {}

name: Build example wheels 

jobs:
  macos:
    runs-on: macos-12
    env:
      CXXFLAGS: "-std=c++11 -stdlib=libc++"
    strategy:
      matrix:
        python-version: ['3.8', '3.12']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          profile: minimal
          default: true
      - name: Build wheels - universal2
        # universal2 supports both x86_64 and aarch64
        uses: messense/maturin-action@v1
        with:
          args: -i python --release --target universal2-apple-darwin --manifest-path examples/pyo3-opentelemetry-lib/Cargo.toml --out dist
      - name: Install wheel
        run: |
          pip install pyo3-opentelemetry-lib --find-links dist --force-reinstall

  linux:
    runs-on: ubuntu-latest
    env:
      CXXFLAGS: "-std=c++11"
    strategy:
      matrix:
        python-version: ['3.8', '3.12']
        target: [x86_64, aarch64]
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        default: true
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build wheels
      uses: messense/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: '2_28'
        args: -i {{  }} --release --manifest-path examples/pyo3-opentelemetry-lib/Cargo.toml --out dist

  windows: 
    runs-on: windows-latest 
    strategy: 
      matrix: 
        python-version: ['3.8', '3.12']
        target: [x64] 
    steps: 
      - uses: actions/checkout@v2 
      - uses: actions/setup-python@v2 
        with: 
          python-version: ${{ matrix.python-version }} 
          architecture: ${{ matrix.target }} 
      - name: Update rustup 
        run: rustup self update 
      - name: Install Rust toolchain 
        uses: actions-rs/toolchain@v1 
        with: 
          toolchain: stable 
          target: x86_64-pc-windows-msvc 
          profile: minimal 
          default: true 
      - name: Build wheels 
        uses: messense/maturin-action@v1 
        with: 
          target: ${{ matrix.target }} 
          args: -i ${{ matrix.python-version }} --release --manifest-path examples/pyo3-opentelemetry-lib/Cargo.toml --out dist 
      - name: Install built wheel 
        run: | 
          pip install pyo3-opentelemetry-lib --find-links dist --force-reinstall --no-deps --no-index
  
  sdist:
    runs-on: ubuntu-latest
    env:
      CXXFLAGS: "-std=c++11"
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        default: true
    - uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Build sdist
      uses: messense/maturin-action@v1
      with:
        command: sdist
        args: --manifest-path examples/pyo3-opentelemetry-lib/Cargo.toml --out dist

